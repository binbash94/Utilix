worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile      on;
  tcp_nopush    on;
  tcp_nodelay   on;

  # gzip (optional)
  gzip on;
  gzip_types text/plain text/css application/javascript application/json application/xml+rss application/xml text/javascript image/svg+xml;
  gzip_min_length 1024;

  # Map for WebSocket upgrade (if needed later)
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;

    # --- Security headers (tune CSP for your needs) ---
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Permissions-Policy "camera=(), microphone=()" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' https: http:; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    # --- Serve frontend (SPA) ---
    root   /usr/share/nginx/html;
    index  index.html;

    # Cache hashed assets aggressively
    location ~* ^/assets/ {
      expires 30d;
      add_header Cache-Control "public, immutable";
      try_files $uri =404;
    }

    # SPA fallback to index.html
    location / {
      try_files $uri /index.html;
    }

    # --- API reverse proxy ---
    # If your API routes are prefixed with /api/
    location /api/ {
      proxy_pass         http://web:8000/;
      proxy_http_version 1.1;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_read_timeout 60s;
    }

    # Health check
    location = /health {
      return 200 "ok";
      add_header Content-Type text/plain;
    }
  }
}
